name: ELO Benchmark between PR and master
on:
  pull_request:
    branches: [master]
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  build-master:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR (current)
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          path: pr

      - name: Fetch master (shallow)
        working-directory: pr
        run: |
          git fetch origin master --depth=1

      - name: Prepare worktree for master
        working-directory: pr
        run: |
          git worktree add -f ../master origin/master
          git worktree list

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Cache cargo (master)
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: cargo-${{ runner.os }}-${{ hashFiles('master/Cargo.lock') }}
          restore-keys: |
            cargo-${{ runner.os }}-

      - name: Build master binary
        working-directory: master
        run: |
          cargo build --locked --release
          mv target/release/thunfisch target/release/previous

      - name: Upload master binary as artifact
        uses: actions/upload-artifact@v4
        with:
          name: thunfisch-previous
          path: master/target/release/previous
          retention-days: 1

  build-current:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR (current)
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Cache cargo (PR)
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: cargo-${{ runner.os }}-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            cargo-${{ runner.os }}-

      - name: Build PR binary
        run: |
          cargo build --locked --release
          mv target/release/thunfisch target/release/current

      - name: Upload PR binary as artifact
        uses: actions/upload-artifact@v4
        with:
          name: thunfisch-current
          path: target/release/current
          retention-days: 1

  benchmark:
    needs: [build-master, build-current]
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout PR for opening book
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Download binaries
        uses: actions/download-artifact@v4
        with:
          pattern: thunfisch-*
          path: ./testing/
          merge-multiple: true

      - name: Verify binaries
        run: |
          ls -la ./testing/
          chmod +x ./testing/previous ./testing/current
      - name: Install fastchess
        run: |
          cd /tmp
          wget https://github.com/Disservin/fastchess/releases/download/v1.6.0-alpha/fastchess-linux-x86-64.tar
          tar -xf fastchess-linux-x86-64.tar
          # Add the directory containing the executable to the system PATH
          echo "/tmp/fastchess-linux-x86-64" >> $GITHUB_PATH

      - name: Run benchmark script
        run: |
          # Verify the installation
          fastchess --version
          # Run the benchmark
          fastchess \
          -engine cmd=./testing/current \
          name=current \
          -engine cmd=./testing/previous \
          name=previous \
          -each proto=uci \
          -each tc=0/0:15+1 \
          -rounds 10 \
          -concurrency 4 \
          -openings file=./testing/8moves_v3.pgn format=pgn order=random \
          > benchmark_summary.txt 2>&1

      - name: Extract benchmark summary
        if: github.event_name == 'pull_request'
        run: tail -n 10 benchmark_summary.txt > benchmark_for_comment.txt

      - name: Post Benchmark Results to PR
        if: github.event_name == 'pull_request'
        uses: thollander/actions-comment-pull-request@v3
        with:
          file-path: benchmark_for_comment.txt
